#@ load("@ytt:data", "data")
---
#@ refs = data.values.secrets.eso.remote_refs

#@ def ssh_selected():
#@   return refs.sync_git_ssh != None or refs.sync_git.ssh != None
#@ end

apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: sync-git
  namespace: tanzu-sync
  annotations:
    kapp.k14s.io/change-group: tanzu-sync-secrets
    kapp.k14s.io/change-rule.0: "upsert after upserting eso/secretstore"
    kapp.k14s.io/change-rule.1: "delete before deleting eso/secretstore"
    kapp.k14s.io/update-strategy: always-replace
spec:
  secretStoreRef:
    name: tanzu-sync-secrets
    kind: SecretStore
  refreshInterval: "1m"
  target:
    type: #@ "kubernetes.io/ssh-auth" if ssh_selected() else "kubernetes.io/basic-auth"
  data:
    #@ if ssh_selected():
    - secretKey: ssh-privatekey
      remoteRef: #@ refs.sync_git.ssh.private_key if refs.sync_git else refs.sync_git_ssh.ssh_private_key
    - secretKey: ssh-knownhosts
      remoteRef: #@ refs.sync_git.ssh.known_hosts if refs.sync_git else refs.sync_git_ssh.ssh_known_hosts
    #@ else:
    - secretKey: username
      remoteRef: #@ data.values.secrets.eso.remote_refs.sync_git.basic_auth.username
    - secretKey: password
      remoteRef: #@ data.values.secrets.eso.remote_refs.sync_git.basic_auth.password
    #@ end