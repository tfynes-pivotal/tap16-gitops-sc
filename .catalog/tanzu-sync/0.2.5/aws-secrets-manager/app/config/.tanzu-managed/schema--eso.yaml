#@data/values-schema
---
#@schema/title "Tanzu Sync Secrets"
secrets:
  #@schema/title "ESO Secrets"
  #@schema/validation one_not_null=["aws", "vault"]
  eso:
    #@schema/title "ESO Provider configuration for AWS"
    #@schema/nullable
    aws:
      #@schema/desc "AWS region which hosts the Secrets Manager instance hosting Tanzu Sync secrets."
      #@schema/validation min_len=1
      region: ""
      #@schema/title "ServiceAccount"
      #@schema/desc "Configuration for Kubernetes ServiceAccount which can assume an IAM Role that can fetch Tanzu Sync secrets from AWS Secrets Manager."
      tanzu_sync_secrets:
        #@schema/title "IAM Role ARN"
        #@schema/desc "Amazon Resource Name for the Identity and Access Management Role for which IRSA has been configured."
        #@schema/validation min_len=1
        role_arn: ""
    #@schema/title "ESO Provider configuration for vault"
    #@schema/nullable
    vault:
      #@schema/desc "Vault server hosting Tanzu Sync secrets."
      #@schema/validation min_len=1
      server: ""
      #@schema/desc "Mount path of the Vault KV backend endpoint, used as a path prefix for the external secret key"
      path: "secret"
      #@schema/desc "Vault KV secret engine version"
      version: "v2"
      #@schema/desc "Vault enterprise namespace"
      namespace: ""
      #@schema/title "Authentication configuration for Vault"
      auth:
        #@schema/desc "Kubernetes auth configuration (see https://www.vaultproject.io/docs/auth/kubernetes)"
        kubernetes:
          #@schema/desc "Mount path of the kubernetes secrets engine"
          mountPath: "kubernetes"
          #@schema/desc "Vault role with permissions to read Tanzu Sync secrets"
          #@schema/validation min_len=1
          role: "tanzu-sync-vault-role"

    #@schema/title "ESO External Secrets Remote References"
    #@schema/desc "Collection of ESO remote references (i.e. ExternalSecret data[].remoteRef) describing the location and disposition of sensitive data."
    #@schema/validation one_not_null=["sync_git_ssh", "sync_git"]
    remote_refs:

      #@schema/deprecated "sync_git_ssh has been deprecated in favor of sync_git.ssh. This will be removed in a future version"
      #@schema/title "sync-git-ssh Secret"
      #@schema/desc "Mapping of Secret key-to-ESO remote references of sensitive data used to authenticate with the git repository that is the source of truth for this Tanzu Sync (i.e. the 'sync-git-ssh' Secret)."
      #@schema/nullable
      sync_git_ssh:
        #@schema/deprecated "ssh_private_key has been deprecated in favor of sync_git.ssh.private_key. This will be removed in a future version"
        #@schema/desc "ESO remote reference of the private portion of account SSH key or deploy token."
        #@schema/examples ("AWS Secrets Manager (default scheme)", { "key": "dev/tanzu-sync/sync-git-ssh", "property": "ssh-privatekey" })
        #@schema/type any=True
        ssh_private_key: {}
        #@schema/deprecated "ssh_known_hosts has been deprecated in favor of sync_git.ssh.known_hosts. This will be removed in a future version"
        #@schema/desc "ESO remote reference of the known hosts entries used to authenticate the remote host."
        #@schema/examples ("AWS Secrets Manager (default scheme)", { "key": "dev/tanzu-sync/sync-git-ssh", "property": "ssh-knownhosts" })
        #@schema/type any=True
        ssh_known_hosts: {}

      #@schema/title "sync-git Secret"
      #@schema/desc "Mapping of Secret key-to-ESO remote references of sensitive data used to authenticate with the git repository that is the source of truth for this Tanzu Sync (i.e. the 'sync-git' Secret)."
      #@schema/nullable
      #@schema/validation one_not_null=True
      sync_git:
        #@schema/nullable
        #@schema/validation not_null=True, when=lambda _, ctx: not ctx.root["git"]["url"].startswith("https://")
        ssh:
          #@schema/desc "ESO remote reference of the private portion of account SSH key or deploy token."
          #@schema/examples ("AWS Secrets Manager (default scheme)", { "key": "dev/tanzu-sync/sync-git/ssh", "property": "privatekey" })
          #@schema/type any=True
          private_key: {}
          #@schema/desc "ESO remote reference of the known hosts entries used to authenticate the remote host."
          #@schema/examples ("AWS Secrets Manager (default scheme)", { "key": "dev/tanzu-sync/sync-git/ssh", "property": "knownhosts" })
          #@schema/type any=True
          known_hosts: {}
        #@schema/nullable
        #@schema/validation not_null=True, when=lambda _, ctx: ctx.root["git"]["url"].startswith("https://")
        basic_auth:
          #@schema/desc "ESO remote reference of the Username of an account with read permissions to Git repository."
          #@schema/examples ("AWS Secrets Manager (default scheme)", { "key": "dev/tanzu-sync/sync-git/basic_auth", "property": "username" })
          #@schema/type any=True
          username: {}
          #@schema/desc "ESO remote reference of the password for the named account."
          #@schema/examples ("AWS Secrets Manager (default scheme)", { "key": "dev/tanzu-sync/sync-git/basic_auth", "property": "password" })
          #@schema/type any=True
          password: {}

      #@schema/title "install-registry-dockerconfig Secret"
      #@schema/desc "Mapping of Secret key-to-ESO remote references of sensitive data used to authenticate with the OCI registry hosting the TAP PackageRepository (i.e. the 'install-registry-dockerconfig' Secret)."
      install_registry_dockerconfig:
        #@schema/desc "ESO remote reference of Docker configuration JSON-formatted authentication for the OCI registry."
        #@schema/type any=True
        #@schema/examples ("AWS Secrets Manager (default scheme)", { "key": "dev/tanzu-sync/install-registry-dockerconfig" } )
        dockerconfigjson: {}
